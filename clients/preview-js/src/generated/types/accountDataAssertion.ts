/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import {
  Codec,
  Decoder,
  Encoder,
  combineCodec,
  getStructDecoder,
  getStructEncoder,
  getU8Decoder,
  getU8Encoder,
} from '@solana/web3.js';
import {
  CompactBytes,
  CompactBytesArgs,
  CompactU64,
  CompactU64Args,
  getCompactBytesDecoder,
  getCompactBytesEncoder,
  getCompactU64Decoder,
  getCompactU64Encoder,
} from '../../hooked';

export type AccountDataAssertion = {
  offset: CompactU64;
  bytes: CompactBytes;
  compactAssertionSettings: number;
};

export type AccountDataAssertionArgs = {
  offset: CompactU64Args;
  bytes: CompactBytesArgs;
  compactAssertionSettings: number;
};

export function getAccountDataAssertionEncoder(): Encoder<AccountDataAssertionArgs> {
  return getStructEncoder([
    ['offset', getCompactU64Encoder()],
    ['bytes', getCompactBytesEncoder()],
    ['compactAssertionSettings', getU8Encoder()],
  ]);
}

export function getAccountDataAssertionDecoder(): Decoder<AccountDataAssertion> {
  return getStructDecoder([
    ['offset', getCompactU64Decoder()],
    ['bytes', getCompactBytesDecoder()],
    ['compactAssertionSettings', getU8Decoder()],
  ]);
}

export function getAccountDataAssertionCodec(): Codec<
  AccountDataAssertionArgs,
  AccountDataAssertion
> {
  return combineCodec(
    getAccountDataAssertionEncoder(),
    getAccountDataAssertionDecoder()
  );
}
