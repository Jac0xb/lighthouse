/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { GetDataEnumKind, GetDataEnumKindContent, Serializer } from '@metaplex-foundation/umi/serializers';
import { AccountInfoDeltaAssertion, AccountInfoDeltaAssertionArgs, DataValueDeltaAssertion, DataValueDeltaAssertionArgs } from '.';
export type AccountDeltaAssertion = {
    __kind: 'AccountInfo';
    aOffset: number;
    assertion: AccountInfoDeltaAssertion;
} | {
    __kind: 'Data';
    aOffset: number;
    bOffset: number;
    assertion: DataValueDeltaAssertion;
};
export type AccountDeltaAssertionArgs = {
    __kind: 'AccountInfo';
    aOffset: number;
    assertion: AccountInfoDeltaAssertionArgs;
} | {
    __kind: 'Data';
    aOffset: number;
    bOffset: number;
    assertion: DataValueDeltaAssertionArgs;
};
export declare function getAccountDeltaAssertionSerializer(): Serializer<AccountDeltaAssertionArgs, AccountDeltaAssertion>;
export declare function accountDeltaAssertion(kind: 'AccountInfo', data: GetDataEnumKindContent<AccountDeltaAssertionArgs, 'AccountInfo'>): GetDataEnumKind<AccountDeltaAssertionArgs, 'AccountInfo'>;
export declare function accountDeltaAssertion(kind: 'Data', data: GetDataEnumKindContent<AccountDeltaAssertionArgs, 'Data'>): GetDataEnumKind<AccountDeltaAssertionArgs, 'Data'>;
export declare function isAccountDeltaAssertion<K extends AccountDeltaAssertion['__kind']>(kind: K, value: AccountDeltaAssertion): value is AccountDeltaAssertion & {
    __kind: K;
};
//# sourceMappingURL=accountDeltaAssertion.d.ts.map