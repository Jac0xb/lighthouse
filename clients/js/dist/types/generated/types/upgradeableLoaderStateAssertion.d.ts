/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Codec, Decoder, Encoder, GetDataEnumKind, GetDataEnumKindContent } from '@solana/codecs';
import { EquatableOperator, EquatableOperatorArgs, UpgradableBufferAssertion, UpgradableBufferAssertionArgs, UpgradeableLoaderStateType, UpgradeableLoaderStateTypeArgs, UpgradeableProgramAssertion, UpgradeableProgramAssertionArgs, UpgradeableProgramDataAssertion, UpgradeableProgramDataAssertionArgs } from '.';
export type UpgradeableLoaderStateAssertion = {
    __kind: 'State';
    value: UpgradeableLoaderStateType;
    operator: EquatableOperator;
} | {
    __kind: 'Buffer';
    fields: [UpgradableBufferAssertion];
} | {
    __kind: 'Program';
    fields: [UpgradeableProgramAssertion];
} | {
    __kind: 'ProgramData';
    fields: [UpgradeableProgramDataAssertion];
};
export type UpgradeableLoaderStateAssertionArgs = {
    __kind: 'State';
    value: UpgradeableLoaderStateTypeArgs;
    operator: EquatableOperatorArgs;
} | {
    __kind: 'Buffer';
    fields: [UpgradableBufferAssertionArgs];
} | {
    __kind: 'Program';
    fields: [UpgradeableProgramAssertionArgs];
} | {
    __kind: 'ProgramData';
    fields: [UpgradeableProgramDataAssertionArgs];
};
export declare function getUpgradeableLoaderStateAssertionEncoder(): Encoder<UpgradeableLoaderStateAssertionArgs>;
export declare function getUpgradeableLoaderStateAssertionDecoder(): Decoder<UpgradeableLoaderStateAssertion>;
export declare function getUpgradeableLoaderStateAssertionCodec(): Codec<UpgradeableLoaderStateAssertionArgs, UpgradeableLoaderStateAssertion>;
export declare function upgradeableLoaderStateAssertion(kind: 'State', data: GetDataEnumKindContent<UpgradeableLoaderStateAssertionArgs, 'State'>): GetDataEnumKind<UpgradeableLoaderStateAssertionArgs, 'State'>;
export declare function upgradeableLoaderStateAssertion(kind: 'Buffer', data: GetDataEnumKindContent<UpgradeableLoaderStateAssertionArgs, 'Buffer'>['fields']): GetDataEnumKind<UpgradeableLoaderStateAssertionArgs, 'Buffer'>;
export declare function upgradeableLoaderStateAssertion(kind: 'Program', data: GetDataEnumKindContent<UpgradeableLoaderStateAssertionArgs, 'Program'>['fields']): GetDataEnumKind<UpgradeableLoaderStateAssertionArgs, 'Program'>;
export declare function upgradeableLoaderStateAssertion(kind: 'ProgramData', data: GetDataEnumKindContent<UpgradeableLoaderStateAssertionArgs, 'ProgramData'>['fields']): GetDataEnumKind<UpgradeableLoaderStateAssertionArgs, 'ProgramData'>;
export declare function isUpgradeableLoaderStateAssertion<K extends UpgradeableLoaderStateAssertion['__kind']>(kind: K, value: UpgradeableLoaderStateAssertion): value is UpgradeableLoaderStateAssertion & {
    __kind: K;
};
//# sourceMappingURL=upgradeableLoaderStateAssertion.d.ts.map