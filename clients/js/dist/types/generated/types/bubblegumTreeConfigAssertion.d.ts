/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { PublicKey } from '@metaplex-foundation/umi';
import { GetDataEnumKind, GetDataEnumKindContent, Serializer } from '@metaplex-foundation/umi/serializers';
import { EquatableOperator, EquatableOperatorArgs, IntegerOperator, IntegerOperatorArgs } from '.';
export type BubblegumTreeConfigAssertion = {
    __kind: 'TreeCreator';
    value: PublicKey;
    operator: EquatableOperator;
} | {
    __kind: 'TreeDelegate';
    value: PublicKey;
    operator: EquatableOperator;
} | {
    __kind: 'TotalMintCapacity';
    value: bigint;
    operator: IntegerOperator;
} | {
    __kind: 'NumMinted';
    value: bigint;
    operator: IntegerOperator;
} | {
    __kind: 'IsPublic';
    value: boolean;
    operator: EquatableOperator;
} | {
    __kind: 'IsDecompressible';
    value: number;
    operator: EquatableOperator;
};
export type BubblegumTreeConfigAssertionArgs = {
    __kind: 'TreeCreator';
    value: PublicKey;
    operator: EquatableOperatorArgs;
} | {
    __kind: 'TreeDelegate';
    value: PublicKey;
    operator: EquatableOperatorArgs;
} | {
    __kind: 'TotalMintCapacity';
    value: number | bigint;
    operator: IntegerOperatorArgs;
} | {
    __kind: 'NumMinted';
    value: number | bigint;
    operator: IntegerOperatorArgs;
} | {
    __kind: 'IsPublic';
    value: boolean;
    operator: EquatableOperatorArgs;
} | {
    __kind: 'IsDecompressible';
    value: number;
    operator: EquatableOperatorArgs;
};
export declare function getBubblegumTreeConfigAssertionSerializer(): Serializer<BubblegumTreeConfigAssertionArgs, BubblegumTreeConfigAssertion>;
export declare function bubblegumTreeConfigAssertion(kind: 'TreeCreator', data: GetDataEnumKindContent<BubblegumTreeConfigAssertionArgs, 'TreeCreator'>): GetDataEnumKind<BubblegumTreeConfigAssertionArgs, 'TreeCreator'>;
export declare function bubblegumTreeConfigAssertion(kind: 'TreeDelegate', data: GetDataEnumKindContent<BubblegumTreeConfigAssertionArgs, 'TreeDelegate'>): GetDataEnumKind<BubblegumTreeConfigAssertionArgs, 'TreeDelegate'>;
export declare function bubblegumTreeConfigAssertion(kind: 'TotalMintCapacity', data: GetDataEnumKindContent<BubblegumTreeConfigAssertionArgs, 'TotalMintCapacity'>): GetDataEnumKind<BubblegumTreeConfigAssertionArgs, 'TotalMintCapacity'>;
export declare function bubblegumTreeConfigAssertion(kind: 'NumMinted', data: GetDataEnumKindContent<BubblegumTreeConfigAssertionArgs, 'NumMinted'>): GetDataEnumKind<BubblegumTreeConfigAssertionArgs, 'NumMinted'>;
export declare function bubblegumTreeConfigAssertion(kind: 'IsPublic', data: GetDataEnumKindContent<BubblegumTreeConfigAssertionArgs, 'IsPublic'>): GetDataEnumKind<BubblegumTreeConfigAssertionArgs, 'IsPublic'>;
export declare function bubblegumTreeConfigAssertion(kind: 'IsDecompressible', data: GetDataEnumKindContent<BubblegumTreeConfigAssertionArgs, 'IsDecompressible'>): GetDataEnumKind<BubblegumTreeConfigAssertionArgs, 'IsDecompressible'>;
export declare function isBubblegumTreeConfigAssertion<K extends BubblegumTreeConfigAssertion['__kind']>(kind: K, value: BubblegumTreeConfigAssertion): value is BubblegumTreeConfigAssertion & {
    __kind: K;
};
//# sourceMappingURL=bubblegumTreeConfigAssertion.d.ts.map