/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Address } from '@solana/addresses';
import { Codec, Decoder, Encoder, GetDataEnumKind, GetDataEnumKindContent, Option, OptionOrNullable } from '@solana/codecs';
import { EquatableOperator, EquatableOperatorArgs } from '.';
export type UpgradableBufferAssertion = {
    __kind: 'Authority';
    value: Option<Address>;
    operator: EquatableOperator;
};
export type UpgradableBufferAssertionArgs = {
    __kind: 'Authority';
    value: OptionOrNullable<Address>;
    operator: EquatableOperatorArgs;
};
export declare function getUpgradableBufferAssertionEncoder(): Encoder<UpgradableBufferAssertionArgs>;
export declare function getUpgradableBufferAssertionDecoder(): Decoder<UpgradableBufferAssertion>;
export declare function getUpgradableBufferAssertionCodec(): Codec<UpgradableBufferAssertionArgs, UpgradableBufferAssertion>;
export declare function upgradableBufferAssertion(kind: 'Authority', data: GetDataEnumKindContent<UpgradableBufferAssertionArgs, 'Authority'>): GetDataEnumKind<UpgradableBufferAssertionArgs, 'Authority'>;
export declare function isUpgradableBufferAssertion<K extends UpgradableBufferAssertion['__kind']>(kind: K, value: UpgradableBufferAssertion): value is UpgradableBufferAssertion & {
    __kind: K;
};
//# sourceMappingURL=upgradableBufferAssertion.d.ts.map