/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { PublicKey } from '@metaplex-foundation/umi';
import { GetDataEnumKind, GetDataEnumKindContent, Serializer } from '@metaplex-foundation/umi/serializers';
import { EquatableOperator, EquatableOperatorArgs } from '.';
export type UpgradeableProgramAssertion = {
    __kind: 'ProgramDataAddress';
    value: PublicKey;
    operator: EquatableOperator;
};
export type UpgradeableProgramAssertionArgs = {
    __kind: 'ProgramDataAddress';
    value: PublicKey;
    operator: EquatableOperatorArgs;
};
export declare function getUpgradeableProgramAssertionSerializer(): Serializer<UpgradeableProgramAssertionArgs, UpgradeableProgramAssertion>;
export declare function upgradeableProgramAssertion(kind: 'ProgramDataAddress', data: GetDataEnumKindContent<UpgradeableProgramAssertionArgs, 'ProgramDataAddress'>): GetDataEnumKind<UpgradeableProgramAssertionArgs, 'ProgramDataAddress'>;
export declare function isUpgradeableProgramAssertion<K extends UpgradeableProgramAssertion['__kind']>(kind: K, value: UpgradeableProgramAssertion): value is UpgradeableProgramAssertion & {
    __kind: K;
};
//# sourceMappingURL=upgradeableProgramAssertion.d.ts.map