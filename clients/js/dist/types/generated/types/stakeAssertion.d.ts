/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { PublicKey } from '@metaplex-foundation/umi';
import { GetDataEnumKind, GetDataEnumKindContent, Serializer } from '@metaplex-foundation/umi/serializers';
import { EquatableOperator, EquatableOperatorArgs, IntegerOperator, IntegerOperatorArgs } from '.';
export type StakeAssertion = {
    __kind: 'DelegationVoterPubkey';
    value: PublicKey;
    operator: EquatableOperator;
} | {
    __kind: 'DelegationStake';
    value: bigint;
    operator: IntegerOperator;
} | {
    __kind: 'DelegationActivationEpoch';
    value: bigint;
    operator: IntegerOperator;
} | {
    __kind: 'DelegationDeactivationEpoch';
    value: bigint;
    operator: IntegerOperator;
} | {
    __kind: 'CreditsObserved';
    value: bigint;
    operator: IntegerOperator;
};
export type StakeAssertionArgs = {
    __kind: 'DelegationVoterPubkey';
    value: PublicKey;
    operator: EquatableOperatorArgs;
} | {
    __kind: 'DelegationStake';
    value: number | bigint;
    operator: IntegerOperatorArgs;
} | {
    __kind: 'DelegationActivationEpoch';
    value: number | bigint;
    operator: IntegerOperatorArgs;
} | {
    __kind: 'DelegationDeactivationEpoch';
    value: number | bigint;
    operator: IntegerOperatorArgs;
} | {
    __kind: 'CreditsObserved';
    value: number | bigint;
    operator: IntegerOperatorArgs;
};
export declare function getStakeAssertionSerializer(): Serializer<StakeAssertionArgs, StakeAssertion>;
export declare function stakeAssertion(kind: 'DelegationVoterPubkey', data: GetDataEnumKindContent<StakeAssertionArgs, 'DelegationVoterPubkey'>): GetDataEnumKind<StakeAssertionArgs, 'DelegationVoterPubkey'>;
export declare function stakeAssertion(kind: 'DelegationStake', data: GetDataEnumKindContent<StakeAssertionArgs, 'DelegationStake'>): GetDataEnumKind<StakeAssertionArgs, 'DelegationStake'>;
export declare function stakeAssertion(kind: 'DelegationActivationEpoch', data: GetDataEnumKindContent<StakeAssertionArgs, 'DelegationActivationEpoch'>): GetDataEnumKind<StakeAssertionArgs, 'DelegationActivationEpoch'>;
export declare function stakeAssertion(kind: 'DelegationDeactivationEpoch', data: GetDataEnumKindContent<StakeAssertionArgs, 'DelegationDeactivationEpoch'>): GetDataEnumKind<StakeAssertionArgs, 'DelegationDeactivationEpoch'>;
export declare function stakeAssertion(kind: 'CreditsObserved', data: GetDataEnumKindContent<StakeAssertionArgs, 'CreditsObserved'>): GetDataEnumKind<StakeAssertionArgs, 'CreditsObserved'>;
export declare function isStakeAssertion<K extends StakeAssertion['__kind']>(kind: K, value: StakeAssertion): value is StakeAssertion & {
    __kind: K;
};
//# sourceMappingURL=stakeAssertion.d.ts.map