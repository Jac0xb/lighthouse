/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Pda, PublicKey, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
import { AccountDeltaAssertion, AccountDeltaAssertionArgs, LogLevel, LogLevelArgs } from '../types';
export type AssertAccountDeltaInstructionAccounts = {
    /** Account A where the delta is calculated from */
    accountA: PublicKey | Pda;
    /** Account B where the delta is calculated to */
    accountB: PublicKey | Pda;
};
export type AssertAccountDeltaInstructionData = {
    discriminator: number;
    logLevel: LogLevel;
    assertion: AccountDeltaAssertion;
};
export type AssertAccountDeltaInstructionDataArgs = {
    logLevel?: LogLevelArgs;
    assertion: AccountDeltaAssertionArgs;
};
export declare function getAssertAccountDeltaInstructionDataSerializer(): Serializer<AssertAccountDeltaInstructionDataArgs, AssertAccountDeltaInstructionData>;
export type AssertAccountDeltaInstructionArgs = AssertAccountDeltaInstructionDataArgs;
export declare function assertAccountDelta(context: Pick<Context, 'programs'>, input: AssertAccountDeltaInstructionAccounts & AssertAccountDeltaInstructionArgs): TransactionBuilder;
//# sourceMappingURL=assertAccountDelta.d.ts.map