/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Pda, PublicKey, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
import { DataValueAssertion, DataValueAssertionArgs, LogLevel, LogLevelArgs } from '../types';
export type AssertAccountDataInstructionAccounts = {
    /** Target account to be asserted */
    targetAccount: PublicKey | Pda;
};
export type AssertAccountDataInstructionData = {
    discriminator: number;
    logLevel: LogLevel;
    offset: number;
    assertion: DataValueAssertion;
};
export type AssertAccountDataInstructionDataArgs = {
    logLevel?: LogLevelArgs;
    offset: number;
    assertion: DataValueAssertionArgs;
};
export declare function getAssertAccountDataInstructionDataSerializer(): Serializer<AssertAccountDataInstructionDataArgs, AssertAccountDataInstructionData>;
export type AssertAccountDataInstructionArgs = AssertAccountDataInstructionDataArgs;
export declare function assertAccountData(context: Pick<Context, 'programs'>, input: AssertAccountDataInstructionAccounts & AssertAccountDataInstructionArgs): TransactionBuilder;
//# sourceMappingURL=assertAccountData.d.ts.map